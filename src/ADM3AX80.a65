;
;CHAR =ATES
;
LF	=	10
CR	=	13
ESC	=	$1B
SPACE	=	$20
CNTL	=	$5E
CLS	=	$7D
EOL	=	$9B
;
;80 COL COMMANDS
;
XCH80	=	$50
LMG80	=	$60
LMH80	=	$70
YCR80	=	$80
SGR80	=	$99
PAG80	=	$9A
RMG80	=	$A0
RMH80	=	$B0
GET80	=	$C0
CUR80	=	$C1
RST80	=	$C2
PST80	=	$C3
CLR80	=	$C4
LIS80	=	$D0
SCR80	=	$D2
SCB80	=	$D3
GRF80	=	$D4
ICM80	=	$D5
PAL80	=	$D7
CRS80	=	$D9
MCF80	=	$DB
PNT80	=	$DD
;
;MEMORY EQUATES
;
DOSINI	=	$0C
ICDNOZ	=	$21
ICCOMZ	=	$22
ICAX1Z	=	$2A
ICAX2Z	=	$2B
ICIDNO	=	$2E
LMARGN	=	$52
RMARGN	=	$53
VCP	=	$54
HCP	=	$55
IN	=	$CC
CDTMV3	=	$21C
SDMCTL	=	$22F
KEYDEL	=	$2D9
KEYREP	=	$2DA
DVSTAT	=	$2EA
CRSINH	=	$2F0
CHBAS	=	$2F4
LISTF	=	$2FE
SFLAG	=	$2FF
HATABS	=	$31A
ICDNO	=	$341
ICCOM	=	$342
PAL	=	$D014
IRQEN	=	$D20E
SKSTAT	=	$D20F
PORTA	=	$D300
PACTL	=	$D302
DMACTL	=	$D400
WSYNC	=	$D40A
VCOUNT	=	$D40B
NMIEN	=	$D40E


READ:		JSR	DISAB				;DISABLE IRQ INTS
		LDA	#GET80
		JSR	CINP				;REQUEST, GET CHAR
		PHA					;SAVE CHAR
		JSR	INPUT				;GET CURS
		JSR	CURCK				;CHECK FOR X>$4F
		PLA					;RESTORE CHAR
		JMP	ENAB
;
CINP:		JSR	CMD
INPUT:		LDA	#00				;TIME CRITICAL CODE
		TAX					;MUST NOT CROSS A
		LDY	#31				;PAGE BOUNDARY
		STA	DATIN
IN0:		LDA 	PORTA 				;4
		AND	INMSK 				;4
		BEQ	IN01				;3 IF A 0, 2 IF NOT
		DEX
		BNE	IN0
		DEY					;TIMEOUT LOOPS
		BNE	IN0
		SEC					;NO RESPONSE
		RTS
IN01:		LDX	#08
		LDY	#12				;2
IN1:		DEY
		BNE	IN1				;5*Y-1
		NOP					;2
IN10:		LDY	#15				;2 MAIN DLY COUNT
IN2:		DEY
		BNE	IN2				;5*Y-1
		LDA	PORTA				;4 GET BYTE
		AND	INMSK				;4 GET BIT
		CLC					;2
		BEQ	IN25				;0=3,1=2
		SEC					;1=2
IN25:		BCC	IN26				;0=3,1=2
IN26:		DEX					;2 DEC COUNT
		BMI	IN3				;2 (3 DONE)
		ROR	DATIN				;6 SHIFT IN BIT
		BCC	IN10				;3 ALWAYS
IN3:		LDY	#15				;DELAY 1/2 BIT
IN33:		DEY
		BNE	IN33
		LDA	DATIN				;GET CHAR (Y=0)
		BCC	I5				;RETURN IF CHAR
		BPL	I0				;HORIZ WITH NO VERT
		AND	#$7F				;CLEAR UPPER FLAG
		CMP	#$51				;TEST HORIZ/VERT
		BCC	I00 				;HORIZONTAL
		AND	#$1F				;CLEAR MID FLAG
		BCS	I01				;SAVE VERT
I00:		JSR	I0				;SAVE HORIZ
		BCC	INPUT				;GET VERT
I0:		INY					;OFFSET FOR HORIZ
I01:		STA	VCP,Y				;CURS POSITION
		STA	VCS,Y				;CURS SHADOW
		CLC					;INDICATE RESPONSE
I5:		RTS
;
CURCK:		LDA	HCP				;CHECK HORIZ CURSOR
		CMP	#$50				;FOR >$4F
		BCC	I5				;IF NOT
		LDA	#CUR80				;GO GET REAL VALUE
		JSR	CINP
		JMP	I0				;AND STORE IT (Y=0)
;
;
;
CMD: 		SEC 					;THIS CODE MUST NOT
		BCS 	OUT 				;CROSS A PAGE BOUNDARY
OUTPUT:		CLC 					;CMD FLAG=0 FOR CHAR
OUT: 		LDY 	#00
		JSR 	SEND				;SEND START BIT
	
		LDX 	#08				;SETUP BIT COUNT OF 9
		NOP	
		NOP	
		NOP					;2+2+2+2=8
OUT0:		ROR 	A				;PUT BIT INTO CARRY
		BCS 	HI
		BCC 	LO				;2+3=5 CYCLES TO LO
LO:		LDY 	#00				;5+2 CYCLES TO JSR
		JSR 	SEND				;SEND A 0
		BCC 	OUT1				;3 CYCLES
HI:		LDY 	OUTMS				;3+4 CYCLES TO JSR
		JSR 	SEND				;SEND A 1
		BCS 	OUT1				;3 CYCLES
OUT1:		DEX					;NEXT BIT 2 CYC
		BPL 	OUT				;MORE 3 OR 2 CYC
		BMI 	OUT2				;SEND STOP BIT 3 CYC
OUT2:		LDY 	OUTMS				;SEND A 1
		BNE 	OUT3
OUT3:		JSR 	SEND				;2+3+4+3=12
		RTS	
	
SEND:		STY 	PORTA				;OUTPUT BIT
		LDY 	#12				;TIMER FOR 15.7KB
S1:		DEY	
		BNE 	S1				;5*Y-1 CYCLES
		BEQ 	S2				;3
S2:		NOP
		NOP
		NOP
		NOP					;2+2+2+2=8
S3:		RTS					;6 CYCLES
	
;	
;	
;	
;	
JTOGL:		LDA	#01
		EOR 	TOGGLE
		STA 	TOGGLE
JINIT:		LDX 	TOGGLE
		LDY	INMST,X
		STY	INMSK
		LDY	OUTMT,X
		STY	OUTMS
		LDA	#$FF
		STA	PORTA
		LDX	#$38
		STX	PACTL
		STY	PORTA
		LDX	#$3C
		STX	PACTL
		RTS
;
DISAB:		LDY	#00
		STY	NMIEN
		SEI
		RTS
;
ENAB:		LDY	#$C0
		STY	NMIEN
		CLI
EXIT:		LDY #01
ERTS:		RTS
;
VCS:		.BYTE	0
HCS:		.BYTE	0
DEV:		.BYTE	0
LMARGS:		.BYTE	0
LISTS:		.BYTE	0
MODE:		.BYTE	0
CRSS:		.BYTE	0
;
;	
DATIN:		.BYTE	0
HCPS:		.BYTE	0
HCPE:		.BYTE	0
KSTAT:		.BYTE	0
INMSK:		.BYTE	0
OUTMS:		.BYTE	0
TOGGLE:		.BYTE	0
TIOCB:		.BYTE	0
TCHAR:		.BYTE	0
	
INMST:		.BYTE	02,$20
OUTMT:		.BYTE	01,$10
