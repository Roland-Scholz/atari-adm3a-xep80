ca65 V2.17 - Git 59ab140
Main file   : ..\src\xep80han.a65
Current file: ..\src\xep80han.a65

000000r 1               ;.OPT NOLIST
000000r 1               ;	.OPT NOEJECT
000000r 1               ;
000000r 1               	BASE=$6000
000000r 1               ;
000000r 1               ;CHAR EQUATES
000000r 1               ;
000000r 1               	LF=10
000000r 1               	CR=13
000000r 1               	ESC=$1B
000000r 1               	SPACE=$20
000000r 1               	CNTL=$5E
000000r 1               	CLS=$7D
000000r 1               	EOL=$9B
000000r 1               ;
000000r 1               ;80 COL COMMANDS
000000r 1               ;
000000r 1               	XCH80=$50
000000r 1               	LMG80=$60
000000r 1               	LMH80=$70
000000r 1               	YCR80=$80
000000r 1               	SGR80=$99
000000r 1               	PAG80=$9A
000000r 1               	RMG80=$A0
000000r 1               	RMH80=$B0
000000r 1               	GET80=$C0
000000r 1               	CUR80=$C1
000000r 1               	RST80=$C2
000000r 1               	PST80=$C3
000000r 1               	CLR80=$C4
000000r 1               	LIS80=$D0
000000r 1               	SCR80=$D2
000000r 1               	SCB80=$D3
000000r 1               	GRF80=$D4
000000r 1               	ICM80=$D5
000000r 1               	PAL80=$D7
000000r 1               	CRS80=$D9
000000r 1               	MCF80=$DB
000000r 1               	PNT80=$DD
000000r 1               ;
000000r 1               ;MEMORY EQUATES
000000r 1               ;
000000r 1               	DOSINI=$0C
000000r 1               	ICDNOZ=$21
000000r 1               	ICCOMZ=$22
000000r 1               	ICAX1Z=$2A
000000r 1               	ICAX2Z=$2B
000000r 1               	ICIDNO=$2E
000000r 1               	LMARGN=$52
000000r 1               	RMARGN=$53
000000r 1               	VCP=$54
000000r 1               	HCP=$55
000000r 1               	IN=$CC
000000r 1               	CDTMV3=$21C
000000r 1               	SDMCTL=$22F
000000r 1               	KEYDEL=$2D9
000000r 1               	KEYREP=$2DA
000000r 1               	DVSTAT=$2EA
000000r 1               	CRSINH=$2F0
000000r 1               	CHBAS=$2F4
000000r 1               	LISTF=$2FE
000000r 1               	SFLAG=$2FF
000000r 1               	HATABS=$31A
000000r 1               	ICDNO=$341
000000r 1               	ICCOM=$342
000000r 1               	PAL=$D014
000000r 1               	IRQEN=$D20E
000000r 1               	SKSTAT=$D20F
000000r 1               	PORTA=$D300
000000r 1               	PACTL=$D302
000000r 1               	DMACTL=$D400
000000r 1               	WSYNC=$D40A
000000r 1               	VCOUNT=$D40B
000000r 1               	NMIEN=$D40E
000000r 1               ;
000000r 1               	.org BASE-2
005FFE  1               ;
005FFE  1  D6 05        	.WORD CEND-BEGIN					;RELOCATER INFO
006000  1               ;
006000  1  20 B6 64     BEGIN:	JSR ERTS						;DOSINI VECTOR
006003  1  4C DA 62     	JMP CINIT						;RELOCATER JUMP
006006  1               ;
006006  1  00           PAUX1:	.BYTE 0
006007  1  00           PAUX2:	.BYTE 0
006008  1               ;
006008  1  20 A7 64     READ:	JSR DISAB						;DISABLE IRQ INTS
00600B  1  A9 C0        	LDA #GET80
00600D  1  20 1B 60     	JSR CINP						;REQUEST, GET CHAR
006010  1  48           	PHA							;SAVE CHAR
006011  1  20 1E 60     	JSR INPUT						;GET CURS
006014  1  20 7B 60     	JSR CURCK						;CHECK FOR X>$4F
006017  1  68           	PLA							;RESTORE CHAR
006018  1  4C AE 64     	JMP ENAB
00601B  1               ;
00601B  1  20 89 60     CINP:	JSR CMD
00601E  1  A9 00        INPUT:	LDA #00							;TIME CRITICAL CODE
006020  1  AA           	TAX							;MUST NOT CROSS A
006021  1  A0 1F        	LDY #31							;PAGE BOUNDARY
006023  1  8D C1 64     	STA DATIN
006026  1  AD 00 D3     IN0:	LDA PORTA						;4
006029  1  2D C5 64     	AND INMSK						;4
00602C  1  F0 08        	BEQ IN01						;3 IF A 0, 2 IF NOT
00602E  1  CA           	DEX
00602F  1  D0 F5        	BNE IN0
006031  1  88           	DEY							;TIMEOUT LOOPS
006032  1  D0 F2        	BNE IN0
006034  1  38           	SEC							;NO RESPONSE
006035  1  60           	RTS
006036  1  A2 08        IN01:	LDX #08
006038  1  A0 0C        	LDY #12							;2
00603A  1  88           IN1:	DEY
00603B  1  D0 FD        	BNE IN1							;5*Y-1
00603D  1  EA           	NOP							;2
00603E  1  A0 0F        IN10:	LDY #15							;2 MAIN DLY COUNT
006040  1  88           IN2:	DEY
006041  1  D0 FD        	BNE IN2							;5*Y-1
006043  1  AD 00 D3     	LDA PORTA						;4 GET BYTE
006046  1  2D C5 64     	AND INMSK						;4 GET BIT
006049  1  18           	CLC							;2
00604A  1  F0 01        	BEQ IN25						;0=3,1=2
00604C  1  38           	SEC							;1=2
00604D  1  90 00        IN25:	BCC IN26						;0=3,1=2
00604F  1  CA           IN26:	DEX							;2 DEC COUNT
006050  1  30 05        	BMI IN3							;2 (3 DONE)
006052  1  6E C1 64     	ROR DATIN						;6 SHIFT IN BIT
006055  1  90 E7        	BCC IN10						;3 ALWAYS
006057  1  A0 0F        IN3:	LDY #15							;DELAY 1/2 BIT
006059  1  88           IN33:	DEY
00605A  1  D0 FD        	BNE IN33
00605C  1  AD C1 64     	LDA DATIN						;GET CHAR (Y=0)
00605F  1  90 19        	BCC I5							;RETURN IF CHAR
006061  1  10 0F        	BPL I0							;HORIZ WITH NO VERT
006063  1  29 7F        	AND #$7F						;CLEAR UPPER FLAG
006065  1  C9 51        	CMP #$51						;TEST HORIZ/VERT
006067  1  90 04        	BCC I00							;HORIZONTAL
006069  1  29 1F        	AND #$1F						;CLEAR MID FLAG
00606B  1  B0 06        	BCS I01							;SAVE VERT
00606D  1  20 72 60     I00:	JSR I0							;SAVE HORIZ
006070  1  90 AC        	BCC INPUT						;GET VERT
006072  1  C8           I0:	INY							;OFFSET FOR HORIZ
006073  1  99 54 00     I01:	STA VCP,Y						;CURS POSITION
006076  1  99 B7 64     	STA VCS,Y						;CURS SHADOW
006079  1  18           	CLC							;INDICATE RESPONSE
00607A  1  60           I5:	RTS
00607B  1               ;
00607B  1  A5 55        CURCK:	LDA HCP							;CHECK HORIZ CURSOR
00607D  1  C9 50        	CMP #$50						;FOR >$4F
00607F  1  90 F9        	BCC I5							;IF NOT
006081  1  A9 C1        	LDA #CUR80						;GO GET REAL VALUE
006083  1  20 1B 60     	JSR CINP
006086  1  4C 72 60     	JMP I0							;AND STORE IT (Y=0)
006089  1               ;
006089  1  38           CMD:	SEC							;THIS CODE MUST NOT
00608A  1  B0 01        	BCS OUT							;CROSS A PAGE BOUNDARY
00608C  1  18           OUTPUT:	CLC							;CMD FLAG=0 FOR CHAR
00608D  1  A0 00        OUT:	LDY #00
00608F  1  20 B9 60     	JSR SEND						;SEND START BIT
006092  1  A2 08        	LDX #08							;SETUP BIT COUNT OF 9
006094  1  EA           	NOP
006095  1  EA           	NOP
006096  1  EA           	NOP							;2+2+2+2=8
006097  1  6A           OUT0:	ROR A							;PUT BIT INTO CARRY
006098  1  B0 09        	BCS HI
00609A  1  90 00        	BCC LO							;2+3=5 CYCLES TO LO
00609C  1  A0 00        LO:	LDY #00							;5+2 CYCLES TO JSR
00609E  1  20 B9 60     	JSR SEND						;SEND A 0
0060A1  1  90 08        	BCC OUT1						;3 CYCLES
0060A3  1  AC C6 64     HI:	LDY OUTMS						;3+4 CYCLES TO JSR
0060A6  1  20 B9 60     	JSR SEND						;SEND A 1
0060A9  1  B0 00        	BCS OUT1						;3 CYCLES
0060AB  1  CA           OUT1:	DEX							;NEXT BIT 2 CYC
0060AC  1  10 E9        	BPL OUT0						;MORE 3 OR 2 CYC
0060AE  1  30 00        	BMI OUT2						;SEND STOP BIT 3 CYC
0060B0  1  AC C6 64     OUT2:	LDY OUTMS						;SEND A 1
0060B3  1  D0 00        	BNE OUT3
0060B5  1  20 B9 60     OUT3:	JSR SEND						;2+3+4+3=12
0060B8  1  60           	RTS
0060B9  1  8C 00 D3     SEND:	STY PORTA						;OUTPUT BIT
0060BC  1  A0 0C        	LDY #12							;TIMER FOR 15.7KB
0060BE  1  88           S1:	DEY
0060BF  1  D0 FD        	BNE S1							;5*Y-1 CYCLES
0060C1  1  F0 00        	BEQ S2							;3
0060C3  1  EA           S2:	NOP
0060C4  1  EA           	NOP
0060C5  1  EA           	NOP
0060C6  1  EA           	NOP							;2+2+2+2=8
0060C7  1  60           S3:	RTS							;6 CYCLES
0060C8  1               ;
0060C8  1  A5 22        COM:	LDA ICCOMZ						;GET COM BYTE
0060CA  1  C9 14        	CMP #$14						;CHECK DEBUG OUT
0060CC  1  D0 0B        	BNE COM1						;TRY NEXT XIO
0060CE  1  A5 2B        	LDA ICAX2Z						;GET AUX 2
0060D0  1  20 A7 64     COMSD:	JSR DISAB						;STOP INTERRUPTS
0060D3  1  20 89 60     	JSR CMD							;GO SEND
0060D6  1  4C AE 64     	JMP ENAB						;ENABLE AND NORM EXIT
0060D9  1  C9 15        COM1:	CMP #$15						;TEST VALID
0060DB  1  D0 12        	BNE COM2						;NEXT
0060DD  1  A5 2B        	LDA ICAX2Z						;GET AUX 2
0060DF  1  D0 07        	BNE COMBR						;GO DO BURST
0060E1  1  8D BC 64     	STA MODE						;MAKE NORMAL
0060E4  1  A9 D2        	LDA #SCR80						;GET CMD
0060E6  1  D0 E8        	BNE COMSD						;GO SEND
0060E8  1  8D BC 64     COMBR:	STA MODE						;MAKE BURST
0060EB  1  A9 D3        	LDA #SCB80						;GET CMD
0060ED  1  D0 E1        	BNE COMSD						;GO SEND
0060EF  1  C9 16        COM2:	CMP #$16						;CHECK DEBUG IN
0060F1  1  D0 0E        	BNE COM3						;NEXT
0060F3  1  A5 2B        	LDA ICAX2Z						;GET BYTE TO SEND
0060F5  1  20 A7 64     	JSR DISAB
0060F8  1  20 1B 60     	JSR CINP						;REQUEST, GET CHAR
0060FB  1  8D EB 02     	STA DVSTAT+1						;FOR NOW
0060FE  1  4C AE 64     	JMP ENAB
006101  1  C9 19        COM3:	CMP #$19						;CHECK 80/40
006103  1  D0 03        	BNE COM4
006105  1  4C 7C 63     	JMP XIO19						;DO IT
006108  1  60           COM4:	RTS
006109  1               ;
006109  1  A5 22        PCOM:	LDA ICCOMZ						;GET CMD
00610B  1  C9 17        	CMP #$17						;TEST VALID
00610D  1  D0 B8        	BNE S3							;NO MORE FOR NOW
00610F  1  A5 2B        	LDA ICAX2Z						;GET AUX 2
006111  1  C9 08        	CMP #08							;CHECK RESERVED
006113  1  B0 B2        	BCS S3							;NO GOOD
006115  1  29 03        	AND #03							;CHECK 3 AND 7
006117  1  49 03        	EOR #03
006119  1  F0 AC        	BEQ S3							;NOT ALLOWED
00611B  1  A5 2A        	LDA ICAX1Z						;GET AUX1
00611D  1  C9 08        	CMP #08							;CHECK UPPER LIMIT
00611F  1  B0 A6        	BCS S3							;NO GOOD
006121  1  8D 06 60     	STA PAUX1
006124  1  A5 2B        	LDA ICAX2Z						;GET AUX 2
006126  1  8D 07 60     	STA PAUX2
006129  1  4C B4 64     	JMP EXIT
00612C  1               ;
00612C  1  AC FF 02     WRITE:	LDY SFLAG						;CHECK CNTL 1
00612F  1  D0 FB        	BNE WRITE						;IF ON
006131  1  20 A7 64     	JSR DISAB
006134  1  AC B9 64     	LDY DEV							;ARE WE SCREEN?
006137  1  F0 0C        	BEQ WR2							;YES
006139  1  48           	PHA
00613A  1  A9 00        	LDA #00
00613C  1  8D B9 64     	STA DEV
00613F  1  A9 D2        	LDA #SCR80
006141  1  20 89 60     	JSR CMD
006144  1  68           	PLA
006145  1  AC FE 02     WR2:	LDY LISTF						;CHECK LIST FLAG
006148  1  CC BB 64     	CPY LISTS
00614B  1  F0 0F        	BEQ WR3
00614D  1  8C BB 64     	STY LISTS						;SAVE NEW VALUE
006150  1  48           	PHA
006151  1  98           	TYA
006152  1  F0 02        	BEQ WR25
006154  1  A9 01        	LDA #01							;FORCE LSB
006156  1  09 D0        WR25:	ORA #LIS80
006158  1  20 89 60     	JSR CMD							;SEND NEW VALUE
00615B  1  68           	PLA
00615C  1  20 E3 64     WR3:	JSR ALIGN						;SET PARMS
00615F  1  AC F4 02     	LDY CHBAS						;CHECK CHAR SET
006162  1  CC BE 64     	CPY CHSH
006165  1  F0 1D        	BEQ WR5
006167  1  C0 E0        	CPY #$E0
006169  1  D0 0D        	BNE WR4
00616B  1  8C BE 64     	STY CHSH
00616E  1  48           	PHA
00616F  1  A9 D4        	LDA #GRF80
006171  1  20 89 60     WR35:	JSR CMD
006174  1  68           	PLA
006175  1  4C 84 61     	JMP WR5
006178  1  C0 CC        WR4:	CPY #$CC
00617A  1  D0 08        	BNE WR5
00617C  1  8C BE 64     	STY CHSH
00617F  1  48           	PHA
006180  1  A9 D5        	LDA #ICM80
006182  1  D0 ED        	BNE WR35
006184  1  AC F0 02     WR5:	LDY CRSINH						;CHECK CURS FLAG
006187  1  CC BD 64     	CPY CRSS
00618A  1  F0 0F        	BEQ WR6
00618C  1  8C BD 64     	STY CRSS
00618F  1  48           	PHA
006190  1  98           	TYA
006191  1  F0 02        	BEQ WR55
006193  1  A9 01        	LDA #01
006195  1  49 D9        WR55:	EOR #CRS80						;CURSOR ON/OFF
006197  1  20 89 60     	JSR CMD
00619A  1  68           	PLA
00619B  1  20 8C 60     WR6:	JSR OUTPUT						;SEND CHAR
00619E  1  AD BC 64     	LDA MODE						;TEST FOR BURST
0061A1  1  D0 09        	BNE WWAT						;IF SO
0061A3  1  20 1E 60     	JSR INPUT						;GET NEW CURSOR
0061A6  1  20 7B 60     	JSR CURCK						;CHECK FOR X>$4F
0061A9  1  4C AE 64     	JMP ENAB
0061AC  1  20 AE 64     WWAT:	JSR ENAB						;ENABLE INTS
0061AF  1  A0 19        	LDY #25							;OR SUCH
0061B1  1  20 BE 60     	JSR S1
0061B4  1  AD 00 D3     WW1:	LDA PORTA
0061B7  1  2D C5 64     	AND INMSK
0061BA  1  F0 F8        	BEQ WW1
0061BC  1  A0 01        WW2:	LDY #01
0061BE  1  60           	RTS
0061BF  1               ;
0061BF  1  8E C8 64     POPEN:	STX TIOCB
0061C2  1  A6 21        	LDX ICDNOZ
0061C4  1  20 A9 62     	JSR MATRIX
0061C7  1  B0 16        	BCS HANDGO
0061C9  1  AC 2F 02     	LDY SDMCTL
0061CC  1  D0 EE        	BNE WW2
0061CE  1  A9 C3        	LDA #PST80
0061D0  1  20 A7 64     	JSR DISAB
0061D3  1  20 1B 60     	JSR CINP						;REQUEST, GET CHAR
0061D6  1  D0 02        	BNE POP1
0061D8  1  A9 8B        	LDA #139						;NOBODY HOME
0061DA  1  20 AE 64     POP1:	JSR ENAB
0061DD  1  A8           	TAY
0061DE  1  60           	RTS
0061DF  1               ;
0061DF  1  A5 21        HANDGO:	LDA ICDNOZ
0061E1  1  86 21        	STX ICDNOZ
0061E3  1  48           	PHA
0061E4  1  A5 22        	LDA ICCOMZ
0061E6  1  29 08        	AND #08
0061E8  1  AA           	TAX
0061E9  1  20 C4 62     	JSR HAND
0061EC  1  68           	PLA
0061ED  1  85 21        	STA ICDNOZ
0061EF  1  60           	RTS
0061F0  1               ;
0061F0  1  A8           PWRT:	TAY							;SAVE CHAR
0061F1  1  8E C8 64     	STX TIOCB
0061F4  1  BD 41 03     	LDA ICDNO,X
0061F7  1  AA           	TAX
0061F8  1  20 A9 62     	JSR MATRIX
0061FB  1  98           	TYA
0061FC  1  90 1F        	BCC PWP
0061FE  1  8D C9 64     	STA TCHAR						;SAVE CHAR FOR CALL
006201  1  AC C8 64     	LDY TIOCB						;GET UNIT #
006204  1  B9 41 03     	LDA ICDNO,Y
006207  1  48           	PHA							;SAVE UNIT #
006208  1  8A           	TXA							;GET NEW VALUE
006209  1  99 41 03     	STA ICDNO,Y						;REPLACE WITH NEW
00620C  1  85 21        	STA ICDNOZ						;AND ZERO PAGE
00620E  1  A2 06        	LDX #06
006210  1  20 C4 62     	JSR HAND						;GO PRINT
006213  1  68           	PLA							;RESTORE UNIT #
006214  1  AE C8 64     	LDX TIOCB						;GET POINTER
006217  1  9D 41 03     	STA ICDNO,X						;RESTORE OLD
00621A  1  85 21        	STA ICDNOZ
00621C  1  60           	RTS
00621D  1  AC B9 64     PWP:	LDY DEV							;CHECK OUTPUT DEV
006220  1  D0 1C        	BNE PW0
006222  1  48           	PHA
006223  1  AC 2F 02     	LDY SDMCTL
006226  1  F0 07        	BEQ PW2
006228  1  AC 0B D4     PW1:	LDY VCOUNT
00622B  1  C0 81        	CPY #129
00622D  1  D0 F9        	BNE PW1
00622F  1  20 A7 64     PW2:	JSR DISAB
006232  1  A9 DD        	LDA #PNT80
006234  1  8D B9 64     	STA DEV
006237  1  20 89 60     	JSR CMD
00623A  1  20 AE 64     	JSR ENAB
00623D  1  68           	PLA							;RESTORE CHAR
00623E  1  A8           PW0:	TAY							;SAVE CHAR
00623F  1  AD 07 60     	LDA PAUX2						;GET CNTL
006242  1  6A           	ROR A							;CHECK NO XLATE
006243  1  98           	TYA							;RESTORE CHAR
006244  1  B0 2B        	BCS DOIT						;DONT XLATE
006246  1  C9 9B        	CMP #EOL						;CHECK EOL
006248  1  D0 10        	BNE XLATE						;XLATE IF NOT
00624A  1  A9 0D        	LDA #CR							;REPLACE WITH CR
00624C  1  20 71 62     	JSR DOIT						;SEND
00624F  1  AD 07 60     	LDA PAUX2						;GET CNTL
006252  1  29 04        	AND #04							;CHECK NO APPEND
006254  1  D0 50        	BNE WGDS						;DONT APPEND
006256  1  A9 0A        	LDA #LF							;GET LF
006258  1  D0 17        	BNE DOIT						;SEND
00625A  1  AD 07 60     XLATE:	LDA PAUX2						;GET CNTL
00625D  1  C9 02        	CMP #02							;CHECK LIGHT XLATE
00625F  1  98           	TYA							;RESTORE CHAR
006260  1  90 0F        	BCC DOIT						;DONE WITH XLATE
006262  1  29 7F        	AND #$7F						;REMOVE MSB
006264  1  C9 20        	CMP #$20						;CHECK ASCII CHAR
006266  1  B0 09        	BCS DOIT						;GO PRINT ASCII
006268  1  48           	PHA							;SAVE CHAR
006269  1  A9 5E        	LDA #CNTL						;GET "CNTL" CHAR
00626B  1  20 71 62     	JSR DOIT						;SEND
00626E  1  68           	PLA							;RESTORE CHAR
00626F  1  09 40        	ORA #$40						;MAKE ALPHA
006271  1  AC 2F 02     DOIT:	LDY SDMCTL
006274  1  F0 07        	BEQ DO1
006276  1  AC 0B D4     DO0:	LDY VCOUNT
006279  1  C0 81        	CPY #129
00627B  1  D0 F9        	BNE DO0
00627D  1  20 A7 64     DO1:	JSR DISAB
006280  1  20 8C 60     	JSR OUTPUT
006283  1  20 AE 64     	JSR ENAB
006286  1  A0 19        WAIT:	LDY #25							;FOR NOW
006288  1  20 BE 60     	JSR S1
00628B  1  A0 02        	LDY #02
00628D  1  A2 FF        W0:	LDX #255						;FOR NOW
00628F  1  8E 1C 02     	STX CDTMV3						;SETUP VBLANK COUNT
006292  1  AD 00 D3     W1:	LDA PORTA
006295  1  2D C5 64     	AND INMSK
006298  1  D0 0C        	BNE WGDS						;AVAILABLE
00629A  1  AD 1C 02     	LDA CDTMV3						;CHECK COUNTDOWN
00629D  1  D0 F3        	BNE W1
00629F  1  88           	DEY
0062A0  1  D0 EB        	BNE W0
0062A2  1  A0 8A        WTMO:	LDY #138						;DO TIMEOUT
0062A4  1  D0 02        	BNE WRTS						;COULD DO BRKKEY ALSO
0062A6  1  A0 01        WGDS:	LDY #01
0062A8  1  60           WRTS:	RTS
0062A9  1               ;
0062A9  1  E0 02        MATRIX:	CPX #02
0062AB  1  F0 07        	BEQ PNEXT
0062AD  1  B0 04        	BCS POVER
0062AF  1  AD 06 60     	LDA PAUX1
0062B2  1  4A           	LSR A
0062B3  1  60           POVER:	RTS
0062B4  1  A9 03        PNEXT:	LDA #03
0062B6  1  CD 06 60     	CMP PAUX1
0062B9  1  90 F8        	BCC POVER
0062BB  1  AD 06 60     	LDA PAUX1
0062BE  1  29 02        	AND #02
0062C0  1  F0 F1        	BEQ POVER
0062C2  1  CA           	DEX
0062C3  1  60           	RTS
0062C4  1               ;
0062C4  1  BD 31 E4     HAND:	LDA $E431,X
0062C7  1  48           	PHA
0062C8  1  BD 30 E4     	LDA $E430,X
0062CB  1  48           	PHA
0062CC  1  AD C9 64     	LDA TCHAR						;RESTORE CHAR
0062CF  1  AE C8 64     	LDX TIOCB						;GET IOCB POINTER
0062D2  1  60           	RTS							;CALL PRINTER HANDLER
0062D3  1               ;
0062D3  1  A5 22        FORCOM:	LDA ICCOMZ
0062D5  1  C9 18        	CMP #$18						;Fill Command
0062D7  1  F0 4B        	BEQ XIO18
0062D9  1  60           	RTS
0062DA  1               ;
0062DA  1  A9 00        CINIT:	LDA #00
0062DC  1  8D C7 64     	STA TOGGLE
0062DF  1  20 B4 65     	JSR JINIT						;INIT Joy-Port
0062E2  1  A9 50        	LDA #$50
0062E4  1  A0 02        	LDY #02
0062E6  1  20 9D 65     	JSR FSET
0062E9  1  A9 53        	LDA #$53						;S:-Handler
0062EB  1  20 91 65     	JSR FIND
0062EE  1  BD 1B 03     	LDA HATABS+1,X
0062F1  1  8D CA 64     	STA TEMPSV
0062F4  1  BD 1C 03     	LDA HATABS+2,X
0062F7  1  8D CB 64     	STA TEMPSV+1
0062FA  1  A9 45        	LDA #$45						;E-Handler
0062FC  1  20 91 65     	JSR FIND
0062FF  1  BD 1B 03     	LDA HATABS+1,X
006302  1  85 CC        	STA IN							;ZP-pointer
006304  1  BD 1C 03     	LDA HATABS+2,X
006307  1  85 CD        	STA IN+1
006309  1  A0 0F        	LDY #15
00630B  1  B1 CC        C003:	LDA (IN),Y
00630D  1  99 DD 63     	STA TMTAB,Y						;copy E-Handler entries to TMTAB
006310  1  88           	DEY
006311  1  10 F8        	BPL C003
006313  1  A9 D2        	LDA #<FORCOM-1	;&$FF
006315  1  8D E7 63     	STA TMTAB+10
006318  1  A9 61        	LDA #>FORCOM-1	;/256
00631A  1  8D E8 63     	STA TMTAB+11
00631D  1  AD 0F D2     	LDA SKSTAT						;shift pressed?
006320  1  29 08        	AND #08
006322  1  F0 7A        	BEQ C004						;yes, jump
006324  1  A9 45        XIO18:	LDA #$45						;E:
006326  1  A0 00        	LDY #00
006328  1  20 9D 65     	JSR FSET
00632B  1  A9 53        	LDA #$53						;S:
00632D  1  A0 01        	LDY #01
00632F  1  20 9D 65     	JSR FSET
006332  1  A9 2B        	LDA #<WRITE-1	;&$FF					;ICPUT (write-routine)
006334  1  8D 46 03     	STA $346
006337  1  A9 60        	LDA #>WRITE-1	;/256
006339  1  8D 47 03     	STA $347
00633C  1  A2 00        EOPEN:	LDX #00
00633E  1  20 6A 65     	JSR FESUB
006341  1  A5 2A        	LDA ICAX1Z						;GET AUX 1
006343  1  29 20        	AND #32							;CHECK CLEAR BIT
006345  1  D0 61        	BNE C005						;DONT DO RESET
006347  1  A9 00        	LDA #00
006349  1  A2 06        	LDX #06
00634B  1  9D B7 64     C0035:	STA VCS,X						;clear VCS
00634E  1  CA           	DEX
00634F  1  10 FA        	BPL C0035
006351  1  A9 E0        	LDA #$E0						;normal charset
006353  1  8D BE 64     	STA CHSH
006356  1  A9 4F        	LDA #$4F						;79 right margin
006358  1  8D BF 64     	STA RMARGS
00635B  1  8D C0 64     	STA COMPOS
00635E  1  20 A7 64     	JSR DISAB
006361  1  A9 C2        IO00:	LDA #RST80						;RESET 80 COL
006363  1  20 1B 60     	JSR CINP						;REQUEST, GET CHAR
006366  1  90 05        	BCC IO01						;GOT IT
006368  1  20 AC 65     	JSR JTOGL						;SWITCH PORTS
00636B  1  D0 F4        	BNE IO00						;DO IT AGAIN
00636D  1  AD 14 D0     IO01:	LDA PAL							;CHECK COMPUTER TYPE
006370  1  29 0E        	AND #$0E
006372  1  D0 05        	BNE IOP1
006374  1  A9 D7        	LDA #PAL80
006376  1  20 89 60     	JSR CMD							;SET 80 COL TO 50HZ
006379  1  4C AE 64     IOP1:	JMP ENAB
00637C  1               ;
00637C  1  A2 06        XIO19:	LDX #06
00637E  1  20 6A 65     	JSR FESUB
006381  1  A9 53        	LDA #$53
006383  1  20 91 65     	JSR FIND
006386  1  AD CA 64     	LDA TEMPSV
006389  1  9D 1B 03     	STA HATABS+1,X
00638C  1  AD CB 64     	LDA TEMPSV+1
00638F  1  9D 1C 03     	STA HATABS+2,X
006392  1  AD E3 63     	LDA TMTAB+6
006395  1  8D 46 03     	STA $346
006398  1  AD E4 63     	LDA TMTAB+7
00639B  1  8D 47 03     	STA $347
00639E  1  A9 45        C004:	LDA #$45
0063A0  1  A0 03        	LDY #03
0063A2  1  20 9D 65     	JSR FSET
0063A5  1  4C B4 64     	JMP EXIT
0063A8  1  A9 D2        C005:	LDA #SCR80						;IN CASE A PRINT
0063AA  1  4C D0 60     	JMP COMSD						;HAS OCCURED
0063AD  1               ;
0063AD  1  3B 63        EDTAB:	.WORD EOPEN-1						;OPEN
0063AF  1  B3 64        	.WORD EXIT-1						;CLOSE
0063B1  1  39 64        	.WORD EGET-1						;GET LINE OF TEXT
0063B3  1  2B 61        	.WORD WRITE-1						;PUT (NO CURS)
0063B5  1  B3 64        	.WORD EXIT-1						;STATUS
0063B7  1  C7 60        	.WORD COM-1						;SPECIAL (CMD OUT)
0063B9  1  4C B4 64     	JMP EXIT						;INIT
0063BC  1  00           	.BYTE 0
0063BD  1               ;
0063BD  1  BE 61        PRTAB:	.WORD POPEN-1						;OPEN
0063BF  1  B3 64        	.WORD EXIT-1						;CLOSE
0063C1  1  B5 64        	.WORD ERTS-1						;GET
0063C3  1  EF 61        	.WORD PWRT-1						;PUT
0063C5  1  BE 61        	.WORD POPEN-1						;STATUS
0063C7  1  08 61        	.WORD PCOM-1						;SPECIAL
0063C9  1  4C B4 64     	JMP EXIT						;INIT
0063CC  1  00           	.BYTE 0
0063CD  1               ;
0063CD  1  EC 63        SCTAB:	.WORD SOPEN-1						;OPEN
0063CF  1  B3 64        	.WORD EXIT-1						;CLOSE
0063D1  1  1E 64        	.WORD SREAD-1						;GET-LOCATE
0063D3  1  2F 64        	.WORD SWRIT-1						;PUT-PLOT
0063D5  1  B3 64        	.WORD EXIT-1						;STATUS
0063D7  1  B5 64        	.WORD ERTS-1						;SPECIAL
0063D9  1  4C B4 64     SCT1:	JMP EXIT						;INIT
0063DC  1  00           	.BYTE 0
0063DD  1               ;
0063DD  1  B3 64 B3 64  TMTAB:	.WORD EXIT-1,EXIT-1
0063E1  1  B3 64 B3 64  	.WORD EXIT-1,EXIT-1
0063E5  1  B3 64 B3 64  	.WORD EXIT-1,EXIT-1
0063E9  1  4C B4 64     	JMP EXIT
0063EC  1  00           	.BYTE 0
0063ED  1               ;
0063ED  1  A5 2B        SOPEN:	LDA ICAX2Z
0063EF  1  29 08        	AND #08
0063F1  1  F0 E6        	BEQ SCT1
0063F3  1  A5 2A        	LDA ICAX1Z
0063F5  1  29 10        	AND #16
0063F7  1  D0 E0        	BNE SCT1
0063F9  1  A9 00        	LDA #00							;SEND 0
0063FB  1  20 A7 64     	JSR DISAB
0063FE  1  20 8C 60     	JSR OUTPUT
006401  1  20 1E 60     	JSR INPUT
006404  1  A9 99        	LDA #SGR80						;SET GRAPHICS
006406  1  20 89 60     	JSR CMD
006409  1  AD 14 D0     	LDA PAL
00640C  1  29 0E        	AND #$0E
00640E  1  D0 05        	BNE SOP1
006410  1  A9 9A        	LDA #PAG80
006412  1  20 89 60     	JSR CMD
006415  1  A9 C4        SOP1:	LDA #CLR80						;FILL WITH 0 SENT
006417  1  20 1B 60     	JSR CINP						;REQUEST, GET CHAR
00641A  1  A9 01        	LDA #01
00641C  1  4C E8 60     	JMP COMBR
00641F  1               ;
00641F  1  20 A7 64     SREAD:	JSR DISAB
006422  1  20 E3 64     	JSR ALIGN						;SET PARMS
006425  1  20 08 60     	JSR READ						;GET CHAR
006428  1  C9 9B        	CMP #EOL						;CHECK EOL
00642A  1  D0 AD        	BNE SCT1						;RETURN NORMAL
00642C  1  A9 20        	LDA #SPACE						;REPLACE WITH SPACE
00642E  1  D0 A9        	BNE SCT1						;RETURN NORMAL
006430  1               ;
006430  1  48           SWRIT:	PHA							;SAVE CHAR
006431  1  A9 1B        	LDA #ESC						;FORCE PRINT
006433  1  20 2C 61     	JSR WRITE
006436  1  68           	PLA							;RESTORE CHAR
006437  1  4C 2C 61     	JMP WRITE						;SEND IT
00643A  1               ;
00643A  1  AD C0 64     EGET:	LDA COMPOS
00643D  1  F0 41        	BEQ EBACK
00643F  1  A5 55        	LDA HCP
006441  1  8D C2 64     	STA HCPS
006444  1  8D C3 64     	STA HCPE
006447  1  20 9E 64     EG1:	JSR KCALL						;GET KB BYTE
00644A  1  C9 9B        	CMP #EOL
00644C  1  F0 0F        	BEQ EGBAK
00644E  1  20 2C 61     	JSR WRITE						;SEND TO 80 COL
006451  1  A4 55        	LDY HCP							;THIS CODE IS FOR
006453  1  CC C3 64     	CPY HCPE						;SPECIAL CASE LINES
006456  1  90 EF        	BCC EG1							;DONT UPDATE IF LESS
006458  1  8C C3 64     	STY HCPE
00645B  1  B0 EA        	BCS EG1
00645D  1  8C C4 64     EGBAK:	STY KSTAT						;SAVE STATUS
006460  1  C0 80        	CPY #$80						;CHECK STAT
006462  1  B0 2E        	BCS EBA0						;DO EOL IF EOF/BREAK
006464  1  20 A7 64     	JSR DISAB						;DISAB FOR CMD
006467  1  A9 00        	LDA #00
006469  1  8D C0 64     	STA COMPOS
00646C  1  AD BC 64     	LDA MODE
00646F  1  F0 04        	BEQ EG2
006471  1  A9 00        	LDA #00
006473  1  F0 03        	BEQ EG3
006475  1  AD C2 64     EG2:	LDA HCPS
006478  1  20 89 60     EG3:	JSR CMD							;X CURS TO OLD VAL
00647B  1  A9 DB        	LDA #MCF80						;Y CURS TO FIRST
00647D  1  20 89 60     	JSR CMD
006480  1  20 08 60     EBACK:	JSR READ						;GO GET A CHAR
006483  1  C9 9B        	CMP #EOL
006485  1  D0 13        	BNE EGXT						;NOT DONE YET
006487  1  A4 55        	LDY HCP
006489  1  CC C3 64     	CPY HCPE						;CHECK RIGHTMOST
00648C  1  B0 04        	BCS EBA0						;CURSOR POSITION
00648E  1  A9 20        	LDA #SPACE						;IF NOT THERE
006490  1  D0 08        	BNE EGXT						;THEN FAKE SPACE
006492  1  8D C0 64     EBA0:	STA COMPOS						;SET NON 0
006495  1  20 2C 61     	JSR WRITE
006498  1  A9 9B        	LDA #EOL						;RETURN WITH EOL
00649A  1  AC C4 64     EGXT:	LDY KSTAT						;GET STATUS
00649D  1  60           	RTS
00649E  1               ;
00649E  1  AD 25 E4     KCALL:	LDA $E425
0064A1  1  48           	PHA
0064A2  1  AD 24 E4     	LDA $E424
0064A5  1  48           	PHA
0064A6  1  60           	RTS
0064A7  1               ;
0064A7  1  A0 00        DISAB:	LDY #00
0064A9  1  8C 0E D4     	STY NMIEN
0064AC  1  78           	SEI
0064AD  1  60           	RTS
0064AE  1               ;
0064AE  1  A0 C0        ENAB:	LDY #$C0
0064B0  1  8C 0E D4     	STY NMIEN
0064B3  1  58           	CLI
0064B4  1  A0 01        EXIT:	LDY #01
0064B6  1  60           ERTS:	RTS
0064B7  1               ;
0064B7  1  00           VCS:	.BYTE 0
0064B8  1  00           HCS:	.BYTE 0
0064B9  1  00           DEV:	.BYTE 0
0064BA  1  00           LMARGS:	.BYTE 0
0064BB  1  00           LISTS:	.BYTE 0
0064BC  1  00           MODE:	.BYTE 0
0064BD  1  00           CRSS:	.BYTE 0
0064BE  1               ;
0064BE  1  00           CHSH:	.BYTE 0
0064BF  1  00           RMARGS:	.BYTE 0
0064C0  1  00           COMPOS:	.BYTE 0
0064C1  1               ;
0064C1  1  00           DATIN:	.BYTE 0
0064C2  1  00           HCPS:	.BYTE 0
0064C3  1  00           HCPE:	.BYTE 0
0064C4  1  00           KSTAT:	.BYTE 0
0064C5  1  00           INMSK:	.BYTE 0
0064C6  1  00           OUTMS:	.BYTE 0
0064C7  1  00           TOGGLE:	.BYTE 0
0064C8  1  00           TIOCB:	.BYTE 0
0064C9  1  00           TCHAR:	.BYTE 0
0064CA  1               ;
0064CA  1  00 00        TEMPSV:	.WORD 0
0064CC  1               ;
0064CC  1  02 20        INMST:	.BYTE 02,$20
0064CE  1  01 10        OUTMT:	.BYTE 01,$10
0064D0  1               ;
0064D0  1  00 00 00 4F  FETAB:	.BYTE 0,0,0,$4F,24,3
0064D4  1  18 03        
0064D6  1  3E 00 02 27  	.BYTE 62,0,2,39,30,6
0064DA  1  1E 06        
0064DC  1               ;
0064DC  1  45 53 50     LOOKUP:	.BYTE "ESP"
0064DF  1  AD CD BD DD  LOWAD:	.BYTE EDTAB&$FF,SCTAB&$FF,PRTAB&$FF,TMTAB&$FF
0064E3  1               ;
0064E3  1  A4 55        ALIGN:	LDY HCP							;GET HCURS
0064E5  1  CC B8 64     	CPY HCS							;COMPARE TO SHADOW
0064E8  1  F0 1B        	BEQ A1							;NO CHANGE
0064EA  1  8C B8 64     	STY HCS							;SAVE NEW VALUE
0064ED  1  48           	PHA							;SAVE CHAR
0064EE  1  98           	TYA
0064EF  1  C9 50        	CMP #$50
0064F1  1  90 0E        	BCC A00
0064F3  1  4A           	LSR A
0064F4  1  4A           	LSR A
0064F5  1  4A           	LSR A
0064F6  1  4A           	LSR A
0064F7  1  09 50        	ORA #XCH80
0064F9  1  48           	PHA
0064FA  1  98           	TYA
0064FB  1  29 0F        	AND #$0F
0064FD  1  20 89 60     	JSR CMD
006500  1  68           	PLA
006501  1  20 89 60     A00:	JSR CMD							;SEND NEW CURSOR
006504  1  68           	PLA
006505  1  A4 54        A1:	LDY VCP							;GET VCURS
006507  1  C0 19        	CPY #25							;CHECK UPPER LIMIT
006509  1  90 02        	BCC A15
00650B  1  A0 18        	LDY #24							;STATUS LINE
00650D  1  CC B7 64     A15:	CPY VCS							;COMPARE TO SHADOW
006510  1  F0 0B        	BEQ A2							;NO CHANGE
006512  1  8C B7 64     	STY VCS							;SAVE NEW VALUE
006515  1  48           	PHA							;SAVE CHAR
006516  1  98           	TYA
006517  1  09 80        	ORA #YCR80						;SET CMD BIT
006519  1  20 89 60     	JSR CMD							;SEND NEW CURSOR
00651C  1  68           	PLA
00651D  1  A4 52        A2:	LDY LMARGN
00651F  1  C4 53        	CPY RMARGN
006521  1  90 04        	BCC A24
006523  1  A0 00        	LDY #00
006525  1  84 52        	STY LMARGN
006527  1  CC BA 64     A24:	CPY LMARGS
00652A  1  F0 1A        	BEQ A3
00652C  1  8C BA 64     	STY LMARGS
00652F  1  48           	PHA
006530  1  98           	TYA
006531  1  29 0F        	AND #$0F
006533  1  09 60        	ORA #LMG80
006535  1  20 89 60     	JSR CMD
006538  1  A5 52        	LDA LMARGN
00653A  1  4A           	LSR A
00653B  1  4A           	LSR A
00653C  1  4A           	LSR A
00653D  1  4A           	LSR A
00653E  1  F0 05        	BEQ A25
006540  1  09 70        	ORA #LMH80
006542  1  20 89 60     	JSR CMD
006545  1  68           A25:	PLA
006546  1  A4 53        A3:	LDY RMARGN
006548  1  CC BF 64     	CPY RMARGS
00654B  1  F0 1C        	BEQ A4
00654D  1  8C BF 64     	STY RMARGS
006550  1  48           	PHA
006551  1  98           	TYA
006552  1  29 0F        	AND #$0F
006554  1  09 A0        	ORA #RMG80
006556  1  20 89 60     	JSR CMD
006559  1  A5 53        	LDA RMARGN
00655B  1  4A           	LSR A
00655C  1  4A           	LSR A
00655D  1  4A           	LSR A
00655E  1  4A           	LSR A
00655F  1  C9 04        	CMP #04
006561  1  F0 05        	BEQ A35
006563  1  09 B0        	ORA #RMH80
006565  1  20 89 60     	JSR CMD
006568  1  68           A35:	PLA
006569  1  60           A4:	RTS
00656A  1               ;
00656A  1  BD D0 64     FESUB:	LDA FETAB,X
00656D  1  8D 2F 02     	STA SDMCTL
006570  1  8D 00 D4     	STA DMACTL
006573  1  BD D1 64     	LDA FETAB+1,X
006576  1  85 54        	STA VCP
006578  1  BD D2 64     	LDA FETAB+2,X
00657B  1  85 55        	STA HCP
00657D  1  85 52        	STA LMARGN
00657F  1  BD D3 64     	LDA FETAB+3,X
006582  1  85 53        	STA RMARGN
006584  1  BD D4 64     	LDA FETAB+4,X
006587  1  8D D9 02     	STA KEYDEL
00658A  1  BD D5 64     	LDA FETAB+5,X
00658D  1  8D DA 02     	STA KEYREP
006590  1  60           	RTS
006591  1               ;
006591  1  A2 00        FIND:	LDX #00
006593  1  DD 1A 03     F1:	CMP HATABS,X
006596  1  F0 13        	BEQ F2
006598  1  E8           	INX
006599  1  E8           	INX
00659A  1  E8           	INX
00659B  1  D0 F6        	BNE F1
00659D  1               ;
00659D  1  20 91 65     FSET:	JSR FIND
0065A0  1  B9 DF 64     SET:	LDA LOWAD,Y
0065A3  1  9D 1B 03     	STA HATABS+1,X
0065A6  1  A9 63        	LDA #EDTAB/256
0065A8  1  9D 1C 03     	STA HATABS+2,X
0065AB  1  60           F2:	RTS
0065AC  1               ;
0065AC  1  A9 01        JTOGL:	LDA #01
0065AE  1  4D C7 64     	EOR TOGGLE
0065B1  1  8D C7 64     	STA TOGGLE
0065B4  1  AE C7 64     JINIT:	LDX TOGGLE
0065B7  1  BC CC 64     	LDY INMST,X
0065BA  1  8C C5 64     	STY INMSK
0065BD  1  BC CE 64     	LDY OUTMT,X
0065C0  1  8C C6 64     	STY OUTMS
0065C3  1  A9 FF        	LDA #$FF
0065C5  1  8D 00 D3     	STA PORTA
0065C8  1  A2 38        	LDX #$38
0065CA  1  8E 02 D3     	STX PACTL
0065CD  1  8C 00 D3     	STY PORTA
0065D0  1  A2 3C        	LDX #$3C
0065D2  1  8E 02 D3     	STX PACTL
0065D5  1  60           	RTS
0065D6  1               ;
0065D6  1               	CEND=*
0065D6  1               ;
0065D6  1               	.END
